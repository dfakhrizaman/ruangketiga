services:
  db:
    image: postgres:15-alpine
    container_name: ruangketiga_db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: ruangketiga_db
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d ruangketiga_db || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
    
  migrate:
    image: migrate/migrate:latest
    container_name: ruangketiga_migrate
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # Mount the migrations folder so the 'migrate' CLI can see them
      - ./backend/migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "postgres://myuser:mypassword@db:5432/ruangketiga_db?sslmode=disable",
      "up"
    ]

  backend:
    #* Change `target: dev` to `target: production` when pushing to release
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: ruangketiga_app

    #* Comment the volumes and its child when pushing to release
    # volumes:
      # - ./backend:/app
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: myuser
      DB_PASSWORD: mypassword
      DB_NAME: ruangketiga_db
  frontend:
    container_name: ruangketiga_web
    image: nextapp:1.0.0
    build:
      context: ./frontend
      dockerfile: next.dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    depends_on:
      - backend

volumes:
  dbdata:
